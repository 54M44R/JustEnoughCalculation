
name: Release tagged build

on:
  push:
    tags: [ '*' ]

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout mod repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 32

      - name: Set release version
        run: |
          IFS='-' read -r mv pv <<< "${GITHUB_REF#refs/*/}"
          echo "MC_VERSION=${mv}" >> $GITHUB_ENV
          echo "RELEASE_VERSION=${pv}" >> $GITHUB_ENV
          echo "${mv}"
          echo "${pv}"

      - name: Set up JDK 8
        uses: actions/setup-java@v3
        with:
          java-version: '8'
          distribution: 'temurin'
          cache: gradle

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Setup the workspace
        run: ./gradlew --info --stacktrace ${{ inputs.workspace }}

      - name: Build the mod
        run: ./gradlew --info --stacktrace build

      # Continue on error in the following steps to make sure releases still get made even if one of the methods fails

      - name: Delete old release if it already exists
        run: gh release delete --yes "${MC_VERSION}-${RELEASE_VERSION}"
        continue-on-error: true
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Release under current tag
        run: |
          export "CHANGELOG_FILE=$(mktemp --suffix=.md)"
          echo "CHANGELOG_FILE=${CHANGELOG_FILE}" >> $GITHUB_ENV
          gh api --method POST -H "Accept: application/vnd.github+json" \
            "/repos/${GITHUB_REPOSITORY}/releases/generate-notes" \
            -f tag_name="${MC_VERSION}-${RELEASE_VERSION}" \
            --jq ".body" > "${CHANGELOG_FILE}"
          cat "${CHANGELOG_FILE}"
          gh release create "${MC_VERSION}-{RELEASE_VERSION}" -F "${CHANGELOG_FILE}" ./build/libs/*.jar
        shell: bash
        continue-on-error: true
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish to Maven, Modrinth and CurseForge
        run: ./gradlew --info --stacktrace build publish
        continue-on-error: true
        env:
          MAVEN_USER: ${{ secrets.MAVEN_USER }}
          MAVEN_PASSWORD: ${{ secrets.MAVEN_PASSWORD }}
          MODRINTH_TOKEN: ${{ secrets.MODRINTH_TOKEN }}
          CURSEFORGE_TOKEN: ${{ secrets.CURSEFORGE_TOKEN }}
        if: ${{ env.MAVEN_USER != '' }}